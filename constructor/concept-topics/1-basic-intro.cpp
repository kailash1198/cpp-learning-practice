#include <iostream>
using namespace std;
// constructor - initialization value to data member
//  Construction special method which automatically invoked when object of class is created
// And constructor cannot return any values 
// 1. Implicit constructor - automatically generated by compiler. and this is used for initialized default value for objects
// 2. Explicit constructor - defined by programmer. this is used for inilized object for specific values
// to define explicit constructor we always use 'explicit' with constructor name
// explicit name(){};

// 1. implicit constructor
class baseClass
{
private:
    int numOne;
    int numTwo;

public:
    // baseClass(){

    // };

    baseClass(int a = 0, int b = 0) // default construction created as argumenets so we do not need to iniliaze default value as shown above
    {
        numOne = a;
        numTwo = b;
        cout << "Automatically invoked" << endl;
        cout << numOne << " " << numTwo << endl;
    }
};

// 2. explicit constructor
class mainClass
{
public:
    explicit mainClass(int numOne)
    {
        cout << "Explicit constructor call" << endl;
        cout << numOne << endl;
    }
};
int main(void)
{
    // int p = 20;
    // int q = 40;
    // baseClass obj(p, q);



    mainClass mainObj(100); //sucess, because value of explicit constructor given to objects
    mainObj = mainClass(200);//sucess, because value of explicit constructor given to objects

    mainClass obj2; //error because value of contructor not given at object createion time here, So thats why this is invoked when you provide value of explicit constructor (This is define by programmer, thats why this is explicit constructor)
}